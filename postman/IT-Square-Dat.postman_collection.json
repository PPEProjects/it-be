{
	"info": {
		"_postman_id": "383d63e5-3c1a-4385-8eaf-430e22045a7d",
		"name": "IT-Square",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "auth-core",
			"item": [
				{
					"name": "SignUp",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation Mutation($data: UserCreateInput!) {\n  signupUser(data: $data) {\n    token\n    user {\n      id\n      email\n      name\n    }\n  }\n}",
								"variables": "{\n  \"data\": {\n    \"email\": \"minh@gmail.com\",\n    \"name\": \"kelvin\",\n    \"password\": \"1093978287799666\",\n    \"password_confirmation\":\"1093978287799666\"\n  }\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "SignUpLocal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation SignupLocalUser($data: UserCreateInput!) {\n  signupLocalUser(data: $data) {\n    token\n  }\n}",
								"variables": "{\n  \"data\": {\n    \"email\": \"nangdau@gmail.com\",\n    \"name\": \"Tran Chi\",\n    \"password\": \"minhdat2702\",\n    \"password_confirmation\":\"minhdat2702\"\n  }\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "auth SignIn",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query SignIn($email: String!, $password: String!) {\n  signIn(email: $email, password: $password) {\n    token\n    user {\n      id\n      name\n      email\n    }\n  }\n}",
								"variables": "{\n   \"email\": \"sadasd122@gmail.com\",\n    \"password\": \"dsadasd\"\n}\n\n\n "
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "project",
			"item": [
				{
					"name": "create_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProject($data: ProjectInput!) {\n  createProject(data: $data) {\n    id\n    name\n    user {\n      email\n      id\n      name\n    }\n    attachments\n    category\n    description\n    level\n    privacy\n    version\n    budget\n    type\n    salary\n    status\n    memberJoin\n    is_recruit\n    is_involved\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n  \"data\": {\n    \"name\": \"IT-Square\",\n    \"coAuthorUserIds\": [2,3,6],\n    \"attachments\": {\n        \"main_picture\":[\n            {\n            \"id\":1,\n            \"thumb\":\"mainPicture.png\"\n            },\n             {\n            \"id\":2,\n            \"thumb\":\"mainPicture2.png\"\n            }\n        ],\n        \"plitch_deck\":[\n            {\n            \"id\":1,\n            \"thumb\":\"plitchDeck.pdf\"\n        },\n        {\n            \"id\":2,\n            \"thumb\":\"plitchDeck2.pdf\"\n        }\n        ],\n        \"other\":[\n            {\n                \"id\":7,\n                \"thumb\":\"fileVideo.mp4\"\n            },\n             {\n            \"id\":9,\n            \"thumb\":\"fileWord.DOCX\"\n            }\n            ]\n    },\n    \"category\": \"website\",\n    \"description\": \"create website for it engineerd\",\n    \"level\": \"medium\",\n    \"privacy\": \"public\",\n    \"version\": \"0.1\",\n    \"budget\": {\n        \"money\": \"200000\",\n        \"iso_code\": \"USD\"\n    },\n    \"salary\": {\n        \"money\": \"15000\",\n        \"iso_code\": \"USD\"\n    },\n    \"type\": \"ideas\",\n    \"status\": \"interesting\",\n    \"is_recruit\": true,\n    \"is_involved\": true\n  }\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateProject($data: ProjectInput!) {\n  updateProject(data: $data) {\n    id\n    name\n    attachments\n    authorUserId\n    category\n    description\n    level\n    privacy\n    version\n    budget\n    type\n    salary\n    status\n    memberJoin\n    is_involved\n    is_recruit\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n  \"data\": {\n    \"id\":2,\n    \"name\": \"IT-Square\",\n    \"coAuthorUserIds\": [2,3,6],\n    \"attachments\": {\n        \"main_picture\":[\n            {\n            \"id\":1,\n            \"thumb\":\"mainPicture.png\"\n            },\n             {\n            \"id\":2,\n            \"thumb\":\"mainPicture2.png\"\n            }\n        ],\n        \"plitch_deck\":[\n            {\n            \"id\":1,\n            \"thumb\":\"plitchDeck.pdf\"\n        },\n        {\n            \"id\":2,\n            \"thumb\":\"plitchDeck2.pdf\"\n        }\n        ],\n        \"other\":[\n            {\n                \"id\":7,\n                \"thumb\":\"fileVideo.mp4\"\n            },\n             {\n            \"id\":9,\n            \"thumb\":\"fileWord.DOCX\"\n            }\n            ]\n    },\n    \"category\": \"website\",\n    \"description\": \"create website for it engineerd\",\n    \"level\": \"medium\",\n    \"privacy\": \"public\",\n    \"version\": \"0.1\",\n    \"budget\": {\n        \"money\": \"200000\",\n        \"iso_code\": \"USD\"\n    },\n    \"salary\": {\n        \"money\": \"15000\",\n        \"iso_code\": \"USD\"\n    },\n    \"type\": \"ideas\",\n    \"status\": \"running\",\n    \"memberJoin\":[{\n        \"userId\": 2,\n        \"postion\":\"BE\",\n        \"skill\":\"php\",\n        \"exip\": \"create AI\",\n        \"level\": \"senior\"\n    }],\n    \"is_recruit\": true,\n    \"is_involved\": true\n  }\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProject($deleteProjectId: Int) {\n  deleteProject(id: $deleteProjectId)\n}",
								"variables": "{\n  \"deleteProjectId\": 5\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_all_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Query {\n  allProject {\n    id\n    name\n    user {\n      email\n      id\n      name\n    }\n    attachments\n    category\n    description\n    level\n    privacy\n    version\n    budget\n    type\n    salary\n    status\n    is_recruit\n    is_involved\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_detail_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query DetailProject($detailProjectId: ID) {\n  detailProject(id: $detailProjectId) {\n    id\n    name\n    user {\n      email\n      id\n      name\n      phone_number\n      avatar_attachment\n    }\n    members{\n        id\n        position\n        memberUser{\n            id\n            name\n            avatar_attachment\n        }\n    }\n    attachments\n    authorUserId\n    category\n    description\n    level\n    privacy\n    version\n    budget\n    type\n    salary\n    status\n    memberJoin\n    is_recruit\n    is_involved\n     projectLikes {\n      projectId\n      userId\n    }\n    numberLikes\n    createdAt\n    updatedAt\n    timeToDo\n    numberInterested\n    projectInterested {\n      projectId\n    }\n  }\n}",
								"variables": "{\n  \"detailProjectId\": 3\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_search_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query SearchProject($name: String, $type: String, $status: String) {\n  searchProject(name: $name, type: $type, status: $status) {\n    id\n    name\n    user {\n      email\n      id\n      name\n      avatar_attachment\n    }\n    members{\n        id\n        position\n        memberUserId\n        memberUser{\n            id\n            name\n            avatar_attachment\n        }\n    }\n    attachments\n    authorUserId\n    category\n    description\n    level\n    privacy\n    version\n    budget\n    type\n    salary\n    status\n    memberJoin\n    is_recruit\n    is_involved\n    createdAt\n    updatedAt\n    projectLikes {\n      projectId\n    }\n    projectInterested {\n      projectId\n    }\n    numberLikes\n    numberInterested\n  }\n}",
								"variables": "{\n  \"type\": \"project\",\n  \"status\": \"inter\",\n  \"name\": \"I\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_my_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query MyProject($type: String) {\n  myProject(type: $type) {\n    id\n    name\n    user {\n      email\n      id\n      name\n    }\n    attachments\n    authorUserId\n    category\n    description\n    level\n    privacy\n    version\n    budget\n    type\n    salary\n    is_involved\n    is_recruit\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n    \"type\": \"i\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_list_join_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query ListJoinProject($type: String) {\n  listJoinProject(type: $type) {\n    user {\n      avatar_attachment_id\n    }\n    name\n    attachments\n    countProject\n  }\n}",
								"variables": "{\n  \"type\": \"i\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_list_interested_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query ListInterestedProject($type: String) {\n  listInterestedProject(type: $type) {\n    user {\n      avatar_attachment_id\n    }\n    name\n    attachments\n    countProject\n  }\n}",
								"variables": "{\n  \"type\": \"i\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_admin_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Query($type: String, $arrange: String, $name: String, $status: String) {\n  adminProject(type: $type, arrange: $arrange, name: $name, status: $status) {\n    name\n    authorUserId\n    category\n    countProject\n    type\n    status\n  }\n}",
								"variables": "{\n  \"type\": \"ideas\",\n  \"name\": \"B\",\n  \"status\": \"interesting\"\n \n \n  \n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "query_me",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Me {\n  me {\n    name\n    userAdvance {\n      language\n     \n    }\n    userFeedback {\n      grate\n    }\n  \n    projectMembers {\n      project {\n        name\n      }\n      roles\n    }\n  }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_search_user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query AllUsers($roles: JSON, $name: String) {\n  searchUsers(roles: $roles, name: $name) {\n    email\n    name\n    userAdvance {\n      roles\n    }\n  }\n}",
								"variables": "{\n  \"roles\": \"U\",\n  \"name\":  \"m\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_all_users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query AllUsers {\n  allUsers {\n    id\n    email\n    name\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_detail_users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query DetailUser($detailUserId: ID) {\n  detailUser(id: $detailUserId) {\n    id\n    first_name\n    name\n    email\n    phone_number\n    address\n    date_of_birth\n    gender\n    userAdvance{\n        id\n        userId\n        roles\n        language\n        skill\n        info\n        plan\n        goal\n        numberFramework\n        selfProject{\n            id\n            name\n            attachments\n        }\n        joinProject{\n            id \n            position\n            project{\n                id\n                name\n                category\n                attachments\n                timeToDo\n            }\n        }\n    }\n  }\n}",
								"variables": "{\n  \"detailUserId\": 3\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "interested-project",
			"item": [
				{
					"name": "create_interested_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProjectInterested($data: ProjectInterestedInput!) {\n  createProjectInterested(data: $data) {\n    id\n    projectId\n    createdAt\n    updatedAt\n    userId\n  }\n}",
								"variables": "{\n  \"data\": {\n    \"projectId\": 2\n  }\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_interested_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateProjectInterested($data: ProjectInterestedInput!) {\n  updateProjectInterested(data: $data) {\n    id\n    projectId\n    userId\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n  \"data\": {\n    \"id\": \"3\",\n    \"projectId\": \"2\",\n    \"userId\":\"5\"\n  }\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_interested_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation Mutation($deleteProjectInterestedId: Int) {\n  deleteProjectInterested(id: $deleteProjectInterestedId)\n}",
								"variables": "{\n  \"deleteProjectInterestedId\": 43\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_all_interested_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query AllProjectInterested {\n  allProjectInterested {\n    id\n    projectId\n    project{\n        name\n    }\n    userId\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n \n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_detail_interested_project Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query DetailUser($projectId: ID) {\n  detailProjectInterested(projectId: $projectId) {\n    id\n    projectId\n    userId\n    project {\n      name\n    }\n    numberInterested\n  }\n}",
								"variables": "  {\n  \"projectId\":3\n  \n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "project-like",
			"item": [
				{
					"name": "create-project-like",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation Mutation($data: ProjectLikesInput!) {\n  createProjectLikes(data: $data) {\n    id\n    userId\n    projectId\n  }}",
								"variables": "{\n  \"data\": {\n    \"projectId\":6\n  }\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete-project-like",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProjectInterested($deleteProjectLikesId: ID) {\n  deleteProjectLikes(id: $deleteProjectLikesId)\n}",
								"variables": "{\n  \"deleteProjectLikesId\": 57\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "upsert-project-like",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation Mutation($data: ProjectLikesInput!) {\n  upsertprojectLikes(data: $data) {\n    id\n    userId\n    projectId\n  }\n}",
								"variables": "{\n  \"data\": {\n    \"projectId\": \"4\"\n    \n  }\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_all_project_like",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Query {\n  allProjectLikes {\n    id\n    userId\n    projectId\n    project {\n      name\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_detail_project_like",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Query($projectId: ID) {\n  detailProjectLikes(projectId: $projectId) {\n    projectId\n    project {\n      name\n    }\n    numberLikes\n  }\n}",
								"variables": "  {\n  \"projectId\":2\n  \n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "member-project",
			"item": [
				{
					"name": "create_member_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProjectMembers($data: ProjectMembersInput!) {\n  createProjectMembers(data: $data) {\n    id\n    pmUserId\n    projectId\n    project {\n      id\n      name\n    }\n    memberUserId\n    position\n    linkTest\n    salary\n    fee\n    status\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n  \"data\": {\n    \"projectId\": 3,\n    \"memberUserId\": 5,\n    \"position\": \"FE\",\n    \"linkTest\": \"testLink.googleDocs\",\n    \"salary\": {\n        \"money\": 200000,\n        \"code\": \"VND\"\n    }\n  }\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "create_member_project_user_id",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateProjectMembersUserIds($data: ProjectMembersInputId!) {\n  createProjectMembersUserIds(data: $data) {\n    id\n    pmUserId\n    projectId\n    project {\n      id\n      name\n    }\n    memberUserId\n    position\n    linkTest\n    salary\n    fee\n    status\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n  \"data\": {\n    \"projectId\": 3,\n    \"memberUserId\": [9,6],\n    \"position\": \"FE\",\n    \"linkTest\": \"testLink.googleDocs\",\n    \"salary\": {\n        \"money\": 200000,\n        \"code\": \"VND\"\n    }\n  }\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_member_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateProjectMembers($data: ProjectMembersInput!) {\n  updateProjectMembers(data: $data) {\n    id\n    pmUserId\n    projectId\n    memberUserId\n    position\n    linkTest\n    salary\n    fee\n    status\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n  \"data\": {\n    \"id\": \"2\",\n    \"position\": \"DEV\",\n    \"memberUserId\": 3\n  }\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "upsert_member_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation Mutation($data: ProjectMembersInput!) {\n  upsertProjectMembers(data: $data) {\n    id\n    pmUserId\n    projectId\n    roles\n    memberUserId\n    position\n    linkTest\n    salary\n    fee\n    status\n    jobDescription\n     \n  }\n  }\n",
								"variables": "{\n  \"data\": {\n    \"projectId\": \"7\",\n    \"memberUserId\": \"9\",\n    \"position\": \"BE\",\n    \"linkTest\": \"testLink.googleDocs\",\n    \"salary\": {\n      \"money\": 200000,\n      \"code\": \"VND\"\n    },\n    \"pmUserId\": \"5\",\n     \"jobDescription\": \"ban hanh\"\n  }\n  \n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_member_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation DeleteProjectMembers($deleteProjectMembersId: Int) {\n  deleteProjectMembers(id: $deleteProjectMembersId)\n}",
								"variables": "  {\n    \"deleteProjectMembersId\": 2\n  }"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_all_member_project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query AllProjectMembers {\n  allProjectMembers{\n    id\n    pmUserId\n    projectId\n    project {\n      id\n      name\n    }\n    memberUserId\n    position\n    linkTest\n    salary\n    fee\n    status\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n \n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_detail_member_by_project_id",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query DetailMemberByIdProject($projectId: ID) {\n  detailMemberByIdProject(projectId: $projectId) {\n   id\n    pmUserId\n    projectId\n    project {\n      id\n      name\n    }\n    memberUserId\n    memberUser{\n        id\n        name\n    }\n    position\n    linkTest\n    salary\n    fee\n    status\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "  {\n    \"projectId\": 2\n  }"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_detail_member_by_Id_pm",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query DetailProjectMemberByIdPm($pmUserId: Int) {\n  detailProjectMemberByIdPm(pmUserId: $pmUserId) {\n    projectId\n    roles\n    pmUserId\n    project {\n      name\n    }\n  }\n}",
								"variables": "{\n  \"pmUserId\": 7\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user-advance",
			"item": [
				{
					"name": "upsert_users_advance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpsertUserAdvance($data: UserAdvanceInput!) {\n  upsertUserAdvance(data: $data) {\n    id\n    userId\n    roles\n    language\n    skill\n    info\n    goal\n    plan\n    user{\n        name\n    }\n  }\n}",
								"variables": "{\n  \"data\": {\n     \"roles\": [\"tester\"],\n      \"goal\": \"Backend developer\",\n      \"language\": [\"VietNames\", \"English\"],\n      \"skill\": [{\n          \"programe_language\":[\"php\", \"java\", \"C\"],\n          \"framework\":[\"laravel\", \"nodejs\", \"reactjs\"]\n      }],\n      \"info\": \"At arcu nullam scelerisque sed quisque. Sodales tellus adipiscing cursus odio adipiscing. Adipiscing tempor id aenean tristique. Nunc eget commodo id nec nisl in semper. Elit suscipit lacus donec augue. Quam vestibulum, fringilla ornare massa duis. Neque sagittis, turpis feugiat lectus etiam. Tortor massa semper quisque vitae, sed. Tristique sit neque faucibus nibh donec felis. Volutpat dolor lectus donec turpis.\",\n      \"plan\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cursus facilisis vel, tempus rhoncus. In quam nisl, eu pharetra in quam. Adipiscing a, sed adipiscing rhoncus, nulla. Aenean orci fermentum scelerisque risus tincidunt ut habitasse. Magna adipiscing urna donec enim. Pellentesque sed pretium vel purus.\",\n    \"user\": {\n      \"first_name\": \"kelvin\",\n      \"name\": \"dat\",\n      \"phone_number\": \"093465721\",\n      \"avatar_attachment\": [{\n          \"id\":1,\n          \"thumb\": \"avatar.png\"\n      }],\n      \"background_attachment\": [{\n          \"id\":2,\n          \"thumb\": \"background.png\"\n      }],\n      \"address\": \"lost anglest\",\n      \"country\": \"America\",\n      \"gender\": \"male\",\n      \"date_of_birth\": \"2000-03-16\"\n    }\n  }\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "create_users_advance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateUserAdvance($data: UserAdvanceInput!) {\n  createUserAdvance(data: $data) {\n    id\n    userId\n    roles\n    language\n    skill\n    info\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "  {\n    \"data\": {\n      \"roles\": [\"user\"],\n      \"goal\": \"Backend developer\",\n      \"language\": \"VietNames, English\",\n      \"skill\": [{\n          \"programe_language\":[\"php\", \"java\", \"C\"],\n          \"framework\":[\"laravel\", \"nodejs\", \"reactjs\"]\n      }],\n      \"info\": \"At arcu nullam scelerisque sed quisque. Sodales tellus adipiscing cursus odio adipiscing. Adipiscing tempor id aenean tristique. Nunc eget commodo id nec nisl in semper. Elit suscipit lacus donec augue. Quam vestibulum, fringilla ornare massa duis. Neque sagittis, turpis feugiat lectus etiam. Tortor massa semper quisque vitae, sed. Tristique sit neque faucibus nibh donec felis. Volutpat dolor lectus donec turpis.\",\n      \"plan\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cursus facilisis vel, tempus rhoncus. In quam nisl, eu pharetra in quam. Adipiscing a, sed adipiscing rhoncus, nulla. Aenean orci fermentum scelerisque risus tincidunt ut habitasse. Magna adipiscing urna donec enim. Pellentesque sed pretium vel purus.\"\n    }\n  }"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_users_advance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateUserAdvance($data: UserAdvanceInput!) {\n  updateUserAdvance(data: $data) {\n    id\n    roles\n    userId\n    language\n    skill\n    info\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n    \"data\": {\n        \"id\": 1,\n      \"roles\": [\"user\"],\n      \"goal\": \"Fontend developer\",\n      \"language\": \"VietNames, English\",\n      \"skill\": [{\n          \"programe_language\":[\"php\", \"java\", \"C\"],\n          \"framework\":[\"laravel\", \"nodejs\", \"reactjs\"]\n      }],\n      \"info\": \"At arcu nullam scelerisque sed quisque. Sodales tellus adipiscing cursus odio adipiscing. Adipiscing tempor id aenean tristique. Nunc eget commodo id nec nisl in semper. Elit suscipit lacus donec augue. Quam vestibulum, fringilla ornare massa duis. Neque sagittis, turpis feugiat lectus etiam. Tortor massa semper quisque vitae, sed. Tristique sit neque faucibus nibh donec felis. Volutpat dolor lectus donec turpis.\",\n      \"plan\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cursus facilisis vel, tempus rhoncus. In quam nisl, eu pharetra in quam. Adipiscing a, sed adipiscing rhoncus, nulla. Aenean orci fermentum scelerisque risus tincidunt ut habitasse. Magna adipiscing urna donec enim. Pellentesque sed pretium vel purus.\"\n    }\n  }"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_users_advance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation DeleteUserAdvance($deleteUserAdvanceId: ID) {\n  deleteUserAdvance(id: $deleteUserAdvanceId)\n}",
								"variables": "  {\n    \"deleteUserAdvanceId\": \"1\"\n  }"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_all_users_advance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query AllUserAdvance {\n  allUserAdvance {\n    id\n    userId\n    roles\n    language\n    skill\n    info\n    plan\n    goal\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_detail_users_advance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Query($userId: ID) {\n  detailUserAdvance(userId: $userId) {\n    id\n    userId\n    user{\n        id\n        name\n        email\n        phone_number\n    }\n    roles\n    language\n    skill\n    info\n    goal\n    numberSelfIdeas\n    numberJoinedProject\n    numberFramework\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "  {\n    \"userId\": 5\n  }"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user-feedback",
			"item": [
				{
					"name": "create_users_feedback",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateUserFeedback($data: UserFeedbackInput!) {\n  createUserFeedback(data: $data) {\n    id\n    userId\n    projectId\n    grate\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "  {\n    \"data\": {\n      \"userId\": \"7\",\n      \"projectId\": 8,\n      \"grate\": 7\n    }\n  }"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_users_feedback",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateUserFeedback($data: UserFeedbackInput!) {\n  updateUserFeedback(data: $data) {\n    id\n    userId\n    projectId\n    grate\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "  {\n    \"data\": {\n      \"id\": \"6\",\n      \"userId\": \"5\",\n      \"projectId\": 4,\n      \"grate\": 5\n    }\n  }"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_users_feedback",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation DeleteUserFeedback($deleteUserFeedbackId: Int) {\n  deleteUserFeedback(id: $deleteUserFeedbackId)\n}",
								"variables": "  {\n    \"deleteUserFeedbackId\": 1\n  }"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "query_all_users_feedback",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query AllUserFeedback {\n  allUserFeedback {\n    id\n    userId\n    projectId\n    project{\n        id,\n        name\n    }\n    grate\n    createdAt\n    updatedAt\n  }\n}",
								"variables": "{\n  \n}"
							}
						},
						"url": {
							"raw": "{{url}}/graphql",
							"host": [
								"{{url}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}